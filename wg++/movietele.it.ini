**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: movietele.it
* @MinSWversion: V1.1.1/53
* @Revision 1 - [12/02/2014] Steve Wildmore
*   minor site changes
* @Revision 0 - [19/01/2014] Steve Wildmore
*   creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------

site {url=movietele.it|timezone=UTC+01:00|maxdays=8.1|cultureinfo=it-IT|charset=ISO-8859-1|titlematchfactor=90|episodesystem=onscreen}
url_index{url|http://www.movietele.it/guidatv/|channel|}
urldate.format {datestring|dd-MM-yyyy} * not used

scope.range {(urlindex)|end}
index_variable_element.modify {clear}
index_variable_element.modify {addstart(null)|'config_xmltv_id'}
end_scope

scope.range {(datelogo)|end}
index_date.scrub {single(force includeblock=1)|<ul><li><a href="#||">|}
index_date.modify {calculate(format=date,dd-MM-yyyy)|'index_date' 0:0:0 +}
end_scope

index_showsplit.scrub {multi(includeblock=1)|<div id="TabsTV" class="|<div id="|</div>|jQuery("#TabsTV").tabs();}
index_showsplit.modify {replace|</tbody></table>Nessun programma in palinsesto|<tr><td class="Voci">06:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">08:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">10:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">12:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">14:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">16:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">18:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">20:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">22:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">00:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">02:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">04:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr></tbody></table>}

index_showsplit.modify {replace('index_variable_element' ~~ "Premium Calcio ")|2013</span></td></tr></tbody></table>|2013</span></td></tr><tr><td class="Voci">17:40</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">00:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">02:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr><tr><td class="Voci">04:00</td><td>Nessun programma in palinsesto<span class="other_trama"></span></td></tr></tbody></table>}

index_temp_6.modify {clear}
index_temp_6.modify {addstart("")|'index_showsplit'} * save for next use
index_showsplit.modify {clear}

scope.range {(splitindex)|end}

* calculate number of date blocks in the page
* if 7 then channel is single
* if 49 then it's a multi channel page (e.g. Premium Calcio)
index_temp_1.modify {calculate(type=element format=F0)|'index_showsplit' #} * No. of 7-days  blocks

index_temp_2.modify {addstart|0} * make it zero by default
index_temp_2.modify {calculate('index_variable_element' ~~ "Premium Calcio" format=F0)|'index_variable_element' 1 *} * calculate number of 7-days-block to use (-1)
index_temp_3.modify {calculate(format=F0)|'index_temp_3' 7 +} * number of blocks to copy
index_temp_2.modify {calculate(format=F0)|'index_temp_2' 7 * 'index_temp_3' + 1 -}

* loop through all blocks and scrub data
loop {('index_temp_3' > "0")|end}
index_temp_4.modify {substring(type=element)|'index_temp_6' 'index_temp_2' 1} * the index show
index_showsplit.modify {addstart()|####'index_temp_4'}

index_temp_2.modify {calculate(format=F0)|'index_temp_2' 1 -}
index_temp_3.modify {calculate|1 -} * decrease
end_loop

end_scope

index_showsplit.modify {replace|####|\|}
index_showsplit.modify {replace|<tr|\|}
index_showsplit.modify {select|"<td class=\"Voci\">" ~~} * select the real index shows

index_start.scrub {single|<td class="Voci">||</td>|<td>}
index_title.scrub {single|<td class="Voci">|<td><span itemprop="name">|</span>|<span class="other_trama">}

index_description.scrub {single|<span class="other_trama">|<br />|</span></td></tr>|}
index_temp_1.scrub {single|<span class="other_trama">||</span></td></tr>|} * alternative description
index_description.modify {addstart("")|'index_temp_1'} * use alternative if main is empty
index_description.modify {remove|'index_title' - } *remove title from description if present
index_description.modify {cleanup}

index_premiere.modify {addstart('index_title' ~ "PrimaTv")|true}
index_premiere.modify {addstart('index_title' ~ "1^TV")|true}
index_title.modify {replace| /|} * Disney channels have /
index_subtitle.scrub {single|<td class="Voci">| -- |</span>|}
index_title.modify {remove('index_subtitle' not "")|'index_subtitle'} * remove subtitle if present
index_title.modify {remove('index_subtitle' not "")| -- } * remove subtitle if present
index_subtitle.modify {replace| - PrimaTv|}
index_subtitle.modify {replace| - 1^TV|}
index_title.modify {replace| - PrimaTv|}
index_title.modify {replace| - 1^TV|}

index_director.scrub {multi(separator=",")|Regia: ||- Cast:|}
index_director.modify {clear('index_description' not ~ "Cast")}

index_director.scrub {single|<td class="Voci">|(DI |)|} * alternative director
index_title.modify {remove('index_director' not "")| (DI 'index_director')} * remove director if present
index_actor.scrub {multi(separator=",")|Cast: ||.|}
index_temp_1.modify {clear}
index_temp_1.scrub {multi(separator=",")|Cast: || - |}
index_temp_3.scrub {single(separator="," include=last)|Cast: ||.|} * last actor
index_actor.modify {remove(index_temp_3 ~ " - ")|'index_actor'} * clear if contains a -
index_actor.modify {addstart("")|'index_temp_1'} * use alternative if contains -

index_episode.scrub {single|<span class="other_trama">|Ep.| -|} * get episode number
index_episode.modify {calculate(format=F0)|1 *}
index_episode.modify {clear("0")} * clear if episode 0

index_productiondate.modify {calculate(format=productiondate)|'index_description'}
index_category.scrub {single(separator=" - " type=word include=1)|<span class="other_trama">|<br />||}
index_category.modify {replace|RUBRICA DI|}
index_category.modify {replace|PROGRAMMA|}
index_category.modify {replace(type=regex)|([0-9]+\')|}
index_category.modify {cleanup(style=lower)}
index_temp_1.modify {calculate|'index_category' " " #} * count the spaces
index_category.modify {remove('index_temp_1' > "0")|'index_category'} * clear category if more than 1 word

index_temp_2.scrub {single(separator=" - " type=word include=2)|<span class="other_trama">|<br />||} *alternative category
index_temp_2.modify {replace(type=regex)|([0-9]+\')|}
index_temp_2.modify {cleanup(style=lower)}
index_temp_3.modify {calculate|'index_temp_2' " " #} * count the spaces
index_temp_2.modify {remove('index_temp_3' > "0")|'index_temp_2'} * clear category if more than 1 word
index_category.modify {addstart("")|'index_temp_2'} * use alternative if main is null

index_temp_5.scrub {multi(separator="." include=last)|Cast: ||'|} * alternative category 2
index_temp_5.modify {replace(type=regex)|([0-9]+)|} * remove year
index_temp_5.modify {cleanup(style=lower)}
index_category.modify {addstart("")|'index_temp_5'} * use alternative 2 if still null
index_category.modify {cleanup(tags="<"">")}


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {regex||<select.*?name="jumpMenu".*?(?:<option .*?value=\"/guidatv/(.*?)\".*?</option>.*?)+</select>||}
*index_site_channel.scrub {regex||<select.*?name="jumpMenu".*?(?:<option .*?>(.*?)</option>.*?)+</select>||}

*scope.range {(channellist)|end}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}

** add the Premium Calcio X (1-6) channels
*index_site_channel.modify {replace|\||####}
*index_site_id.modify {replace|\||####}
*index_site_id.modify {addstart|mediaset-premium-calcio####mediaset-premium-calcio####mediaset-premium-calcio####mediaset-premium-calcio####mediaset-premium-calcio####mediaset-premium-calcio####}
*index_site_channel.modify {addstart|Premium Calcio 1####Premium Calcio 2####Premium Calcio 3####Premium Calcio 4####Premium Calcio 5####Premium Calcio 6####}
*index_site_channel.modify {replace|####|\|}
*index_site_id.modify {replace|####|\|}

*end_scope
** @auto_xml_channel_end

* WebGrab+Plus ini for grabbing IMDB data from TvGuide websites
* Site : imdb.com, primary search with ask.com
* revision : 1 correction in production date
* Jan van Straaten, 14/04/2012
*
site {url=imdb.com|cultureinfo=en-GB|charset=UTF-8|matchfactor=60|searchsite=ask}
* primary search:
http://www.ask.com/web?&q=imdb%2bDer+grosse+Edison%2b%2bClarence+Brown&/NCR
*url_primarysearch {url(urlencode=1,2,3,4,5,6)|http://www.ask.com/web?&q=|imdb+|'title'|+|'productiondate'|+|'credit'|&/NCR}
url_primarysearch {url(debug urlencode=1,2,3,4)|http://www.ask.com/web?&q=|imdb+|'title'|+|'credit'|&/NCR}
show_id.scrub {multi|primary|imdb|/tt|/|onmousedown}
*
show_id.modify {remove| } * remove spaces
* filter showid (7 char long):
mdb_temp_1.modify {calculate(type=element format=F0)|'show_id' #} * number of show_id's = loop index
loop {('mdb_temp_1' > "0" max=50)|4}
mdb_temp_1.modify {calculate(format=F0)|1 -} * decrease index
mdb_temp_2.modify {substring(type=element)|'show_id' 'mdb_temp_1' 1} * the showid to inspect
mdb_temp_3.modify {calculate(type=char format=F0)|'mdb_temp_2' #} * how many chars in this show_id?
show_id.modify {remove('mdb_temp_3' not "7" type=element)|'show_id' 'mdb_temp_1' 1} * remove this show_id if not 7 chars
* end loop
* filter showid (only numbers and < 2500000):
mdb_temp_1.modify {calculate(type=element format=F0)|'show_id' #} * number of show_id's = loop index
loop {('mdb_temp_1' > "0" max=50)|5}
mdb_temp_1.modify {calculate(format=F0)|1 -} * decrease index
mdb_temp_2.modify {substring(type=element)|'show_id' 'mdb_temp_1' 1} * the showid to inspect
mdb_temp_3.modify {calculate(format=F0)|'mdb_temp_2'} * convert to number
show_id.modify {remove('mdb_temp_3' "0" type=element)|'show_id' 'mdb_temp_1' 1} * remove this show_id if not only numbers
show_id.modify {remove('mdb_temp_3' > "2500000" type=element)|'show_id' 'mdb_temp_1' 1} * remove this show_id if > 2500000
* end loop
*
* imdb url's:
url_mdb_p1 {url|primary|http://www.imdb.com/title/tt|show_id|/}
*url_mdb_p1 {url|primary|http://www.imdb.com/find?q=tt|show_id|&s=all}
*http://www.imdb.com/find?q=tt2200000&s=all
*url_mdb_p2.modify {addstart|'url_mdb_p1'plotsummary}
*url_mdb_p3.modify {addstart|'url_mdb_p1'releaseinfo#akas}
*url_mdb_p4.modify {addstart|'url_mdb_p1'reviews}
*url_mdb_p5.modify {addstart|'url_mdb_p1'fullcredits#cast}
*
url_mdb_p2 {url|primary|http://www.imdb.com/title/tt|show_id|/plotsummary}
url_mdb_p3 {url|primary|http://www.imdb.com/title/tt|show_id|/releaseinfo#akas}
url_mdb_p4 {url|primary|http://www.imdb.com/title/tt|show_id|/reviews}
url_mdb_p5 {url|primary|http://www.imdb.com/title/tt|show_id|/fullcredits#cast}
*
* imdb elements
mdb_title.scrub {single|p1|<span class="title-extra">||<i>|</span>} * original title when redirected 
mdb_title.scrub {single(separator=" - " exclude="IMDb" include=first)|p1|<head>|<title>|(|</title>}
mdb_title.scrub {multi(separator=" - ")|p3|<h5><a name="akas">Also Known As (AKA)</a></h5>|<tr>\n<td>|</td>|</table>} *aka's
*mdb_productiondate.scrub {single|p1|<title>|(|)|</title>}
mdb_productiondate.scrub {single|p1|<title>||</title>|</title>}
mdb_actor.scrub {multi|p1|itemprop="actors"|>|</a>|</div>}
mdb_actor.scrub {multi(exclude="<img src=")|p5|castlist/position|;">|</a>|</table>} * full list
mdb_director.scrub {multi|p1|itemprop="director"|>|</a>|</div>}
mdb_director.scrub {multi|p5|Directed by</a>|/">|</a>|</a>} * fulllist
mdb_starrating.scrub {single|p1|Ratings:|itemprop="ratingValue">|</span>|from}
mdb_starratingvotes.scrub {single|p1|Ratings:|itemprop="ratingCount">|</span>|users</a>}
mdb_commentsummary.scrub {multi(max=5 exclude="This review may contain spoilers")|p4|<a href="reviews-index?">|<b>|</b>|Add another review}
mdb_review.scrub {multi(exclude="SPOILERS ARE INCLUDED" include=first)|p4|<a href="reviews-index?">|</p>\n<p>|</p>\n\n|<div class="yn"}
mdb_plot.scrub {single|p2|<p class="plotpar">||<i>|</i>} 
mdb_description.scrub {single|p1|<meta name="description"|content="|" />|<meta} 
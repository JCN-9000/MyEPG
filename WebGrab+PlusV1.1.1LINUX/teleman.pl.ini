* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* Site : teleman.pl
* revision : 3 site changes + some improvements
* Piotr Oleszczyk & Jan van Straaten, 20/08/2012
* needs V1.1.0
* make sure to save this with utf-8 encoding !!!
*
site {url=teleman.pl|timezone=UTC+01:00|maxdays=12|cultureinfo=pl-PL|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=PL|episodesystem=onscreen}
url_index {url()|http://www.teleman.pl/program-tv/stacje/|channel|?day=|urldate|&hour=-1}
http://www.teleman.pl/program-tv/stacje/TVP-1?day=0
urldate.format {daycounter|0}
*
index_showsplit.scrub {multi|<table id="station_listing">|<tr class="prog cat|</td></tr>|</tbody></table>}
*
* the following creates a channel list file:
*index_site_channel.scrub {multi|<div id="stations_subnav">|">|</a>|<li id="forum_tab">}
*index_site_id.scrub {multi|<div id="stations_subnav">|<a href="/program-tv/stacje/|">|<li id="forum_tab">}
*
index_start.scrub {multi (separator="<span" include=first)|<th>||</th>|<td>}
index_title.scrub {single|class="prog_title">||</a>|</a>}
index_urlshow {url|http://www.teleman.pl|<a href="||" class="prog_title">}
index_category.scrub {single(separator=", " include=first)|<div class="genre">||</div>|</div>}
*index_description.scrub {single|<p class="excerpt">||</p>} * disabled, mostly same as first part of description
*
title.scrub {single(separator=": " include=first)|<h1 property="v:name">||</h1>}
titleoriginal.scrub {single(lang=en)|<div class="info">|<em>|</em>|</em>}
subtitle.scrub {single(separator=": " exclude=first)|<h1 property="v:name">||</h1>}
description.scrub {multi|<h1 property="v:name">|<p class="italic">|</p>|<div id=} * first part of description
description.scrub {multi|<p property="v:summary"|class="summary">|</p>|<div id=} *second part
episode.scrub {single|<h1 property="v:name">|(|)</h1>|class="}
productiondate.scrub {single(separator="-" include=first)|<div class="info">||<span|</span>}
rating.scrub {single|<span class="age_rating|">|</span>}
actor.scrub {multi(max=10)|<h2>Występują|<div class="credits_item">|</div>|<div class="clear"></div>}
*actor.scrub {multi(max=10)|<h2>Występują|title="|" class|<div class="clear"></div>} * actor name only alternative
temp_5.scrub {multi()|<h2>Twórcy|<div class="credits_item"|</div>|<div class="clear"></div>} *other credits temporary in temp_5
productiondate.scrub {single|<div class="info">|<em>|<span>|</div>}
*
* remove episode from title *
subtitle.modify {remove| ('episode')}
*
*remove links from description
description.modify {remove|\|}
loop {('temp_1' not "-1" max=10)|4}
temp_1.modify {calculate(type=char format=F0)|'description' "<a href" -@} *last index of start link
temp_2.modify {calculate(type=char format=F0)|'description' "</a>" -@} *last index of end link
temp_2.modify {calculate(format=F0)|'temp_2' 'temp_1' - 4 +} *length of link (4 + = length </a> )
description.modify {remove(type=char)|'description' 'temp_1' 'temp_2'}
*end loop
description.modify {remove|()} *possible leftover from links
*
* filter actor to get: name jako role
temp_1.modify {calculate(type=element format=F0)|'actor' #} * number of actors
loop{('temp_1' > "0" max=50)|6}
temp_1.modify {calculate(format=F0)|1-} *loop counter and index
temp_2.modify {substring(type=element)|'actor' 'temp_1' 1} * actor
temp_3.modify {calculate(type=char format=F0)|'temp_2' "">" -@}
temp_3.modify {substring(type=char)|'temp_2' 'temp_3'} *uncleaned actor jako role
temp_3.modify {cleanup} * we keep "> as separator
temp_4.modify {addstart|'temp_3'} * add all actors together in a single value element separated by ">
*end loop
actor.modify {remove|'actor'} * clear actor before filling it with 'temp_4' , the actor and its role
actor.modify {addstart|'temp_4'}
actor.modify {replace|">|\|} *replace the separator "> by the multi value element separator |
* remove actor if rubbish (contains "<img src=")
temp_1.modify {calculate(type=element format=F0)|'actor' "<img src=" @}
actor.modify {remove(type=element)|'actor' 'temp_1' 1}
*
*temp_1.modify {calculate(type=element format=F0)|'actor' #}
*temp_1.modify {calculate(format=F0)|1 -}
*temp_2.modify {substring(type=element)|'actor' 'temp_1' 1}
*
temp_4.modify {remove|'temp_4'} * clear this, we need it 
*
* filter the 'temp_5' scrub and put result to correct credits element
temp_1.modify {calculate(type=element format=F0)|'temp_5' #} * number of 'temp_5s'
loop{('temp_1' > "0")|10} * loop the next 10 lines
temp_1.modify {calculate(format=F0)|1 -} *loop counter and index
temp_2.modify {substring(type=element)|'temp_5' 'temp_1' 1} * a credit
temp_3.modify {calculate(type=char format=F0)|'temp_2' "" >" -@}
temp_3.modify {substring(type=char)|'temp_2' 'temp_3'} *uncleaned credit role
temp_3.modify {cleanup} * we keep " > as separator
presenter.modify {addstart('temp_3' ~ "gospodarz")|'temp_3'}
director.modify {addstart('temp_3' ~ "reżyseria")|'temp_3'}
writer.modify {addstart('temp_3' ~ "scenariusz") |'temp_3'}
composer.modify {addstart('temp_3' ~ "kompozytor")|'temp_3'} * composer candidate, in case we need composer
* othercredits.modify {addstart('temp_3' ~ "?????") |'temp_3'} * you can add other credits, don't forget to increase the looplines! now 10
temp_3.modify {remove|'temp_3'}
*end loop
*
*presenter.modify {remove| gospodarz} * if you don't want the role here
presenter.modify {replace|" >|\|} *replace the separator "> by the multi value element separator |
*director.modify {remove| reżyseria} 
director.modify {replace|" >|\|} 
*writer.modify {remove| scenariusz}
writer.modify {replace|" >|\|}
*composer.modify {remove| kompozytor}
composer.modify {replace|" >|\|}
*othercredits.modify {remove| ?????}
*othercredits.modify {replace|" >|\|}
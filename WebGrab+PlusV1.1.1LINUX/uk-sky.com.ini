* WebGrab+Plus ini for grabbing EPG data from SkyUK website
* Site uk-Sky.com
* Tested with version 1.1.0
* revision 1 - This is the first version of the file
* revision 2 - Updates made recommend by Jan, updated the part scrub, updated productiondate and updated description mod
* revision 3 - Changed the Part scrub again, also corrected the program start
* revision 4 - Small change to the Part Scrub, Added an episode scrub,  (yes again) - Ready for GA?
* Quake505 18 May 2012
*
* 
site {url=uk-Skyuk.com|timezone=UTC+00:00|maxdays=7|cultureinfo=en-GB|charset=ISO-8859-1|episodesystem=onscreen}
url_index{url|http://epgservices.sky.com/tvlistings-proxy/TVListingsProxy/tvlistings.json?channels=|channel|&dur=1440&detail=2&time=|urldate|}
urldate.format {datestring|yyyyMMddHHMM}
*
*
* channellist (enable the four lines below to create, then disable)
*
*url_index{url|http://epgservices.sky.com/tvlistings-proxy/TVListingsProxy/init.json}
*index_site_channel.scrub {multi( include=first)|title|:"|",}
*index_site_id.scrub {multi( include=first)|channelid|:"|",}
*index_site_channel.modify {replace ()|\'|}
*
*
index_urlshow {url|http://tv.sky.com/programme/detail/|channelid":"||",}
*
* Index Scrubs
*
index_showsplit.scrub {multi (exclude=first)|program":[|"eventid"|"movielocator"}
index_start.scrub {single ()|"start"|:"|",|",}
index_title.scrub {single ()|"title"|:"|",|",}
index_temp_1.scrub {single ()|"scheduleStatus"|:"|",|",}
index_duration.scrub {single ()|"dur"|:"|",|",}
*
* Index Mods
* 
index_urlshow.modify {addend()|/'{single ( include=first)|:"||",|",}'}
index_start.modify {calculate (format=utctime)|'index_start'}
index_start.modify {remove ('index_temp_1'="FINISHED")|'index_start'}
index_duration.modify {calculate (format=time)|60 / 60 /}
*
* Scrubs
*
title.scrub {single ()|<h1|>|<|/h1}
subtitle.scrub {single ()|class="episode-title"|>|<|/h3>}
description.scrub {single ()|class="description clear"|>|<|/p>}
subtitles.scrub {single (separator="," include="S")|class="description clear"|[|]|/p>}
productiondate.scrub {multi ()|class="description clear"|(|)|/p>}
productiondate.scrub {multi ( 'productiondate'="")|class="description clear"|[|]|/p>}
category.scrub {single ( separator=", ")|class="genres"|>|<|/span}
premiere.scrub {single (include="New")|class="description clear"|>|.|/p>}
temp_1.scrub {single (separator="/" include=first)|<dt>Season</dt>|<dd>|<|/dd>}							
temp_2.scrub {single (separator="/" include=first)|<dt>Episode</dt>|<dd>|<|/dd>}							
temp_3.scrub {single ()|class="description clear"|(Part |)|/p>}
temp_4.scrub {multi ()|class="description clear"|[|]|/p>}
temp_5.scrub {single ()|<dt>Episode</dt>|<dd>|<|/dd>}
* composer scrub is a temp for Part
composer.scrub {single ()|class="episode-title"|Part |<|/h3>}
* producer scrub is a temp for Live
producer.scrub {single ( separator=" " include=first)|<h1|>|<|/h1}
* writer.scrub is a temp for Part
writer.scrub {single ( include="/")|class="episode-title"|>|.|/h3>}
*
* Mods
*
description.modify {remove( 'temp_3'not"")|(Part 'temp_3')}
description.modify {remove( 'temp_4'not"")|['{multi ( include=first)|class="description clear"|[|]|/p>}']}
description.modify {remove( 'temp_4'not"")|['{multi ( include=2)|class="description clear"|[|]|/p>}']}
description.modify {remove( 'temp_4'not"")|['{multi ( include=3)|class="description clear"|[|]|/p>}']}
description.modify {remove( 'temp_4'not"")|['{multi ( include=4)|class="description clear"|[|]|/p>}']}
description.modify {remove()|('{multi ( include=first)|class="description clear"|(|)|/p>}')}
description.modify {remove()|('{multi ( include=first1 exclude=first)|class="description clear"|(|)|/p>}')}
description.modify {remove()|('{multi ( include=first2 exclude=first1)|class="description clear"|(|)|/p>}')}
description.modify {remove()|('{multi ( include=first3 exclude=first2)|class="description clear"|(|)|/p>}')}
description.modify {remove( 'temp_5'not"")|'temp_5'. }
description.modify {remove( 'temp_5'not"")|'temp_5'.}
description.modify {replace ()| Also in HD|}
description.modify {remove()|S'temp_1', Ep 'temp_2'. }
description.modify {remove()|S'temp_1', Ep'temp_2'. } 
description.modify {remove()|S 'temp_1', Ep'temp_2'. }
description.modify {remove()|S 'temp_1', Ep 'temp_2'. }
loop { max=6|2}
description.modify {replace ()|. .|.}
description.modify {replace ()|..|.}
subtitle.modify {remove( 'temp_5'not"")|'temp_5'. }
subtitle.modify {remove( 'temp_5'not"")|'temp_5'.}
subtitle.modify {remove( 'composer'not="")|, Part 'composer'}
subtitle.modify {remove( 'composer'not="")|Part 'composer'}
temp_4.modify {replace ()|'temp_4'|'composer'}
temp_4.modify {calculate( 'composer'not="" format=F0)|" " #}
composer.modify {replace ()|One|1}
composer.modify {replace ()|Two|2}
composer.modify {replace ()|Three|3}
composer.modify {replace ()|Four|4}
composer.modify {replace ()|Five|5}
composer.modify {replace ()|Six|6}
composer.modify {replace ()|Seven|7}
composer.modify {replace ()|Eight|8}
composer.modify {replace ()|Nine|9}
composer.modify {replace ()|Ten|10}
episode.modify {addstart( 'temp_1'not"")|S'temp_1'}
episode.modify {addend( 'temp_2'not"")|E'temp_2'}
temp_2.modify {remove ()|'temp_2'}
temp_2.modify {addstart ( )|'{single ()|class="episode-title"|>Episode |<|/h3>}'}
episode.modify {addend( 'temp_2'not"")|E'temp_2'}
episode.modify {addend( 'temp_3'not"")|P'temp_3'}
episode.modify {addend( 'temp_4'<"1")|P'composer'}
temp_4.modify {replace ()|'temp_4'|'composer'}
temp_4.modify {calculate( 'composer'not="" format=F0)|")" #}
episode.modify {remove( 'temp_4'>"0")|)}
subtitle.modify {remove( 'temp_4'>"0")|(}
episode.modify {replace ( ~", ep")|, ep |E} 
episode.modify {replace ( ~" of ")| of |/}
episode.modify {replace ( ~"\/")|\/|/}
subtitle.modify {remove ( 'temp_2'not="")|Episode 'temp_2'}
temp_6.modify {addstart ()|  <<}
temp_6.modify {replace ()|'temp_6'|'{single ( include="/")|class="description clear"|>|.|</p>}'}
composer.modify {remove()|'composer'}
composer.modify {addstart ()|'temp_6'}
composer.modify {calculate( format=F0)|" " #}
composer.modify {remove( 'composer'<"1")|'composer'}
composer.modify {addstart( 'composer'="")|'temp_6'}
composer.modify {calculate( 'composer'='temp_6' format=F0)|"<" #}
description.modify {remove('composer'<"1")|'temp_6'.}
episode.modify {addend ( 'composer'<"1")|P'temp_6'}
composer.modify {remove()|'composer'}
composer.modify {addstart()|'writer'}
composer.modify {calculate( format=F0)|" " #}
composer.modify {remove( 'composer'<"1")|'composer'}
composer.modify {addstart( 'composer'="")|'writer'}
composer.modify {calculate( 'composer'='writer' format=F0)|"<" #}
subtitle.modify {remove( 'composer'<"1")|'writer'.}
episode.modify {addend ( 'composer'<"1")|P'writer'}
temp_4.modify {remove ()|'temp_4'}
temp_4.modify {addstart ()|'{single ( separator=".""-"",")|<h1|Part|<|/h1>}'}
temp_4.modify {calculate( notnull format=F0)|" " #}
temp_4.modify {replace ( <"1")|'temp_4'|'{single ( separator=".""-"",")|<h1|Part |<|/h1>}'}
episode.modify {addend ( 'temp_4'>"0")|P'temp_4'}
title.modify {remove ( 'temp_4'>"0")|-Part 'temp_4'}
title.modify {remove ( 'temp_4'>"0")|- Part 'temp_4'}
title.modify {remove ( 'temp_4'>"0")| Part 'temp_4'}
description.modify {remove( 'premiere'="New")|'premiere'.}
premiere.modify {addstart ( null)|'{single ( include="New")|class="episode-title"|>|.|/h3>}'}
subtitle.modify {remove( 'premiere'="New")|'premiere'.}
subtitles.modify {replace ( ="S")|'subtitles'|true}
episode.modify {replace()| |}
composer.modify {remove()|'composer'}
title.modify {remove ( 'producer'="Live")|Live }
producer.modify {replace ( not="Live")|'producer'|'{single ( separator=" " include=last)|<h1|>|<|/h1}'}
title.modify {remove ( 'producer'="Live")| - Live}
premiere.modify {replace ( ="New")|'premiere'|true}
premiere.modify {replace ( not="true")|'premiere'|'producer'}
premiere.modify {addstart ( ="")|'producer'}
premiere.modify {replace ( ="Live")|'premiere'|true}
producer.modify {remove ()|'producer'}
composer.modify {remove()|'composer'}
writer.modify {remove ()|'writer'}


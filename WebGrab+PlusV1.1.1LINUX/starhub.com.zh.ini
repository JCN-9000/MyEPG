* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* Site : starhub.com Singapore
* Version for Chinese channels (800)
* revision : 1 small change in showsplit (site change)
* revision : 2 added channel list, changes in url's (site change)
* Jan van Straaten 28/11/2011
*
site {url=starhub.com|timezone=UTC+08:00|maxdays=7|cultureinfo=zh-SG|charset=UTF-8|titlematchfactor=50}
site {ratingsystem=SG|episodesystem=xmltv_ns}
url_index{url|http://tvguide.starhub.com/tvguidephase2chinfo?ch=|channel|&day=|urldate|&isWeb=1&errormsg=}
urldate.format {daycounter|0}
index_showsplit.scrub {multi|<div id="ch_info|class="chif-row|<div class="bordered_r">|}
index_urlshow {url|http://tvguide.starhub.com/tvguidephase2proginfo?p=|onclick="loadProgramInfoTabByProgram('||',this,'tr','1')|;">}
index_urlshow.modify {addend|&day=&isweb=1}
*http://tvguide.starhub.com/tvguidephase2proginfo?p=L00013583701
*index_urlchannellogo {url| }
*
*index_date.scrub {single|}
index_start.scrub {single|<div class="bordered_l">|<strong>|</strong>|<br />}
index_title.scrub {single|<div class="bordered_c">|<span class="pi_ch" style="display:none">|</span>|</div>} 
*
*The following creates a channel list file (enable until *end channel list file creation)
*url_index{url|http://tvguide.starhub.com/tvguidephase2favourite/}
*index_site_id.scrub {|} * dummy scrub to force a channel file 
*index_temp_4.scrub {multi|<option value="|">- |</option>|</option>} * the site_id and the channel_id combined , separated by the first space
** the following loop splits site_id (first word) from channel_id (the rest)
*index_temp_1.modify {calculate(type=element format=F0)|'index_temp_4' #} * the number of channels
*loop {('index_temp_1' > "0" max=200)|6}
*index_temp_1.modify {calculate(format=F0)|1 -}
*index_temp_2.modify {substring(type=element)|'index_temp_4' 'index_temp_1' 1}
*index_temp_3.modify {substring(type=word)|'index_temp_2' 0 1}
*index_site_id.modify {addstart|'index_temp_3'###}
*index_temp_3.modify {substring(type=word)|'index_temp_2' 1}
*index_site_channel.modify {addstart|'index_temp_3'###}
**end loop
** the following loop removes the 'non' chinese channels
*index_site_id.modify {replace|###|\|} * make multi value
*index_site_channel.modify {replace|###|\|} * make multi value
*index_temp_1.modify {calculate(type=element format=F0)|'index_site_id' #} * the number of channels
*loop{('index_temp_1' > "0" max=200)|5}
*index_temp_1.modify {calculate(format=F0)|1 -}
*index_temp_2.modify {substring(type=element)|'index_site_id' 'index_temp_1' 1}
*index_temp_2.modify {remove(type=char)|3} * removes 4th digit , in case site_id 4 digits eg 1108 -> 110
*index_site_channel.modify {remove('index_temp_2' < "800" type=element)|'index_site_channel' 'index_temp_1' 1}
*index_site_id.modify {remove('index_temp_2' < "800" type=element)|'index_site_id' 'index_temp_1' 1}
**end loop
*end channel list file creation
*
title.scrub {single|<div class="pi_title">|<span class="pi_ch">|</span>|</div><br />}
titleoriginal.scrub {single(lang=en)|<div class="pi_title">|id="pi_tn_title">|</span>|</div><br />}
subtitle.scrub {single|<div><b>Episode Title</b></div>|<span class="pi_en">|</span>|</div>}
description.scrub {single|<div><b>Synopsis</b></div>|<span class="pi_ch">|</span>|</div>} 
actor.scrub {single(separator=", ")|<div><b>Cast</b></div>|<span class="pi_ch">|</span>|</div>}
rating.scrub {single|<div><b>Classification</b></div>|<span>|</span>|</div>}
*category.scrub {single|}
productiondate.scrub {single|<div class="pi_title">|id="pi_tn_title">|</span>|</div><br />}
temp_1.scrub {single(separator="(" exclude=first include="S")|<div class="pi_title">|id="pi_tn_title">|</span>|</div><br />} * season part of episode
episode.scrub {single|<div><b>Episode Number</b></div>|<span>|</span>|</div>}
*
* operations:
title.modify {remove| ('productiondate')}
title.modify {remove| ('temp_1'} * removes the season 
description.modify {remove| ('productiondate')}
* convert episode in xmltv_ns
episode.modify {calculate (not "" format=F0)|1 -} * xmltv_ns is 0 based
temp_1.modify {remove|S}
temp_1.modify {remove|)}
temp_1.modify {calculate (not "" format=F0)|1 -} * xmltv_ns is 0 based
temp_1.modify {addend|.} * season/episode separator according to xmltv_ns
episode.modify {addstart|'temp_1'} * add season
episode.modify {remove(".")|.} * clear if only .
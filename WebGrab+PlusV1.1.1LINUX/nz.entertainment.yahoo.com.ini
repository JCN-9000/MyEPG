* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* Site : nz.entertainment.yahoo.com
* revision : 1, timeformat temp_4 'globalized' , showdate in index_variable and forwards loop iso backwards
* Jan van Straaten, 19/07/2012
* needs 1.1.1
* 
site {url=nz.entertainment.yahoo.com|timezone=UTC+13:00|maxdays=3.1|cultureinfo=en-NZ|charset=UTF-8|titlematchfactor=90|ratingsystem=NZ}
site {loadcookie=nz.entertainment.cookie.txt,yahoo.com|firstshow=1}
url_index{url|http://nz.entertainment.yahoo.com/tv-guide/channel/|channel|/}
*http://nz.entertainment.yahoo.com/tv-guide/channel/2/  = 3 days
urldate.format {daycounter|0}
index_showsplit.scrub {multi|<li class="genre|||</li>}
index_urlshow {url|http://nz.entertainment.yahoo.com|<h4>|<a href="|">|</a>} * returns a search result with all shows with title
*
index_date.scrub {multi(force)|<h3 id="|">|<span class="back">|</h3>}
index_start.scrub {single(separator=" - " include=first)|<span class="stamp">||</span>|</span>}
index_stop.scrub {single(separator=" - " exclude=first)|<span class="stamp">||</span>|</span>}
index_title.scrub {single|<h4>|>|</a>|</h4>} 
index_category.scrub {single|-|| item|">}
index_rating.scrub {single|<dd>|   (|)|</dd>}

* the following creates a channel list file:
*index_site_channel.scrub {multi|<select id="tvguide-form-channel" name="id">|">|</option>|</select>}
*index_site_id.scrub {multi|<select id="tvguide-form-channel" name="id">|<option value="|">|</select>}
*
*title.scrub {single|} * always the same as index_title
* the detail page is a search result, we scrub it in temp_1
temp_1.scrub {multi(includeblock='index_variable_element')|class="day">|||</li></ul></div>} * 
*
* operations:
*
scope.range {(indexshowdetails)|end}
* the detail page is a search result that lists all shows with that title for a number of days and all channels
* the following filters the scrub of this search in temp_1 by means of includeblock
* first we compose a variable element with the date and the xmltv_id
index_variable_element.modify {remove|'index_variable_element'} * clear
index_variable_element.modify {calculate(format=date,dddd dd MMM)|'showdate'} * the date as in the start of the search result of the show detail page 
index_variable_element.modify {addend|"&"'config_xmltv_id'"}
index_variable_element.modify {addstart|"} 
*
* next we extract the xmltv_id in a temp for use in the loop
index_temp_1.modify {calculate(type=char format=F0)|'index_variable_element' &" -@} 
index_temp_1.modify {calculate(format=F0)|2 +}
index_temp_1.modify {substring(type=char)|'index_variable_element' 'index_temp_1'}
index_temp_1.modify {remove()|"} * is xmltv_id
end_scope.range
*
* this site has an error in the show detail page. The times there are two hours earlier as in the index page!!?
* the start time with the two hour correction in the proper format:
temp_4.modify {calculate(format=time,h:mmtt)|'index_start' 2:00 -} * the 2 hour correction
temp_4.modify {cleanup(style=lower)} *am/pm is lowercase
temp_4.modify {remove()|.} * the time format in the search result is 12:35pm and not 12:35p.m.
*
* the following loop extracts the search result that contains the right xmltv_id and starttime
loop {('description' not ~ 'temp_4' max=10)|7}
temp_2.modify {calculate(type=char format=F0)|'temp_1' "<ul class="links clearfix"></ul>" @} * first end of descr
temp_3.modify {calculate(type=char format=F0)|'temp_1' "<span class="stamp">" @} * first index of start of descr
temp_2.modify {calculate(format=F0)|'temp_2' 'temp_3' -} * length
description.modify {substring(type=char)|'temp_1' 'temp_3' 'temp_2'} * the descr substracted that contains the index_start string
description.modify {remove(not ~ 'index_temp_1')|'description'} * remove if not for xmltv_id
temp_2.modify {calculate(format=F0)|32 +} * add the length of "<ul class="links clearfix"></ul>" before the removal
temp_1.modify {remove(not "" type=char)|'temp_1' 'temp_3' 'temp_2'}
*end loop
*
* get rid of the non description data:
temp_1.modify {calculate(type=char format=F0)|'description' "<p class="abstract">" -@} * index of the start of the description
temp_1.modify {calculate(format=F0)|20 +}
description.modify {substring(type=char)|'description' 'temp_1'}
description.modify {cleanup}
*
* extract other elements from description:
videoaspect.modify {addstart('description' ~ "(WS\)")|WS}
videoquality.modify {addstart('description' ~ "HD")|HD}
description.modify {remove|(WS)}
description.modify {remove|HD}
*
* productiondate 
productiondate.modify {calculate(format=productiondate)|'description'}
description.modify {remove|. 'productiondate'} *if at the end
description.modify {remove|'productiondate':} *if at the beginning
*
* director
temp_1.modify {calculate(type=char format=F0)|'description' "Director: " -@}
temp_1.modify {calculate(not "-1" format=F0)|10 +}
director.modify {substring('temp_1' not "-1" type=char)|'description' 'temp_1'}
description.modify {remove(separator=", ")|Director: 'director'}
* actors
temp_1.modify {calculate(type=char format=F0)|'description' "Starring: " -@}
temp_1.modify {calculate(not "-1" format=F0)|10 +}
actor.modify {substring('temp_1' not "-1" type=char)|'description' 'temp_1'}
actor.modify {remove|.}
actor.modify {cleanup} *removes trailing spaces
actor.modify {replace|, |\|} * convert to multivalue
description.modify {remove(separator=", ")|Starring: 'actor'}
* category
category.modify {addstart('description' ~ "romantic comedy:")|Romantic Comedy}
description.modify {remove|'category':}
category.modify {addstart('description' ~ "comedy:")|Comedy}
category.modify {addstart('description' ~ "action:")|Action}
category.modify {addstart('description' ~ "featurette:")|Featurette}
category.modify {addstart('description' ~ "drama:")|Drama}
category.modify {addstart('description' ~ "crime:")|Crime}
category.modify {addstart('description' ~ "thriller:")|Thriller}
category.modify {addstart('description' ~ "horror:")|Horror}
category.modify {addstart('description' ~ "western")|Western}
description.modify {remove|'category':}
description.modify {cleanup}
description.modify {addstart("")|No details.}
*
category.modify {cleanup(style=lower)} *same style as index_category
title.modify {addstart|'index_title'} * title is always the same as index_title